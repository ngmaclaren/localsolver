% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normal-forms.R
\docType{data}
\name{Hopf}
\alias{Hopf}
\alias{.Hopf}
\title{Hopf bifurcations}
\format{
An object of class \code{list} of length 7.
}
\usage{
.Hopf

Hopf(t, x, params)
}
\arguments{
\item{r}{One of two possible control parameters, a.k.a. mu}

\item{w}{One of two possible control parameters, a.k.a. omega}
}
\description{
The normal form of the Hopf bifurcation in Euclidean coordinates and without complex numbers.
}
\details{
Hopf bifurcations are necessarily bivariate, requiring both an x and a y coordinate for a single node or isolated system. The implementation here follows from that used in deSolve: the 'x' variable is a vector with the x and y values concatenated. The Hopf() function itself splits the x and y values, computes the derivative, the concatenates and returns.
}
\examples{
library(deSolve)
library(localsolver)
rs <- c(-1, -0.1, -0.01, -0.001, 0.001, 0.01, 0.1, 1)
control <- list(times = seq(0, 100, by = 0.1))
result <- lapply(rs, function(r) {
  ode(.Hopf$xinit, control$times, Hopf, c(list(r = r), .Hopf))
})
plotit <- function(res) {
  start <- res[1, c("y", "z")]
  stop <- res[nrow(res), c("y", "z")]
  xlim = c(-1, 1)
  ylim = c(-1, 1)
  plot(
    res[, c("y", "z")], type = "l", col = 8, lwd = 1,
    xlab = "x", ylab = "y", xlim = xlim, ylim = ylim, xaxs = "i", yaxs = "i"
  )
  points(start["y"], start["z"], pch = 16, col = 3, cex = 3)
  points(stop["y"], stop["z"], pch = 16, col = 2, cex = 3)
}
dev.new(height = 8, width = 16)
par(mfrow = c(2, 4))
for(i in seq_along(result)) {
  plotit(result[[i]])
  title(main = paste("r =", rs[i]))
}
}
\references{
https://en.wikipedia.org/wiki/Hopf_bifurcation
}
\keyword{datasets}
